name: Packer Template Validation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ] 

jobs:
  validate: 
    name: Validate Packer code
    runs-on: ubuntu-latest
    env:
        DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        PORT: ${{ secrets.PORT}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: Build application artifact
        run: zip -r webapp.zip ./

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo /etc/init.d/mysql start
          sudo systemctl enable mysql
          sudo systemctl status mysql

      - name: Configure MySQL
        run: |
          sudo mysql --user=${{ secrets.DB_USER }} --password=${{ secrets.DB_PASSWORD }} --execute="CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"
      
      - name: Install Dependencies
        run: npm install

      - name: Run Integration Tests
        run: npm run test:integration

      - name: Install Packer
        uses: hashicorp/setup-packer@main

      - name: Initialize Packer
        run: packer init packer
        
      - name: Packer fmt
        run: packer fmt -check packer

      - name: Check if fmt command returns any error
        run: |
          if [[ $? -eq 0 ]]; then
            echo "Packer format command succeeded."
          else
            echo "Packer format command failed."
            exit 1
          fi
      - name: Packer validate
        run: packer validate -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var "zone=${{ secrets.ZONE }}" packer
