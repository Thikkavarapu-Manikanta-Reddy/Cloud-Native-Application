name: Packer Machine Image Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
        DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        PORT: ${{ secrets.PORT}}


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: Create .env file
        run: |
          touch .env
          echo "DB_HOSTNAME=${{ secrets.DB_HOSTNAME }}" > .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "PORT= ${{ secrets.PORT}}" >> .env
      
      - name: Build application artifact
        run: zip -r webapp.zip ./
      
      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo /etc/init.d/mysql start
          sudo systemctl enable mysql
          sudo systemctl status mysql

      - name: Configure MySQL
        run: |
          sudo mysql --host=${{ secrets.DB_HOSTNAME }} --user=${{ secrets.DB_USER }} --password=${{ secrets.DB_PASSWORD }} --execute="CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"

      - name: Install Dependencies
        run: npm install

      - name: Run Integration Tests
        run: npm run test:integration

      # Authenticate with GCP using service account key
      - name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Install Packer
        uses: hashicorp/setup-packer@main

      - name: Build image
        run: |
          packer init -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var "zone=${{ secrets.ZONE }}" packer
          packer build -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var "zone=${{ secrets.ZONE }}" packer
